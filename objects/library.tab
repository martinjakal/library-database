DROP TABLE lib_borrow         CASCADE CONSTRAINTS;
DROP TABLE lib_borrow_history CASCADE CONSTRAINTS;
DROP TABLE lib_card           CASCADE CONSTRAINTS;
DROP TABLE lib_payment        CASCADE CONSTRAINTS;
DROP TABLE lib_customer       CASCADE CONSTRAINTS;
DROP TABLE lib_item           CASCADE CONSTRAINTS;
DROP TABLE lib_book           CASCADE CONSTRAINTS;
DROP TABLE lib_author         CASCADE CONSTRAINTS;

------------------------------------------------------------------------------------------------

CREATE TABLE lib_author
(
    id            NUMBER(10)      CONSTRAINT lib_author_id_nn           NOT NULL,
    first_name    VARCHAR2(50),
    last_name     VARCHAR2(50)    CONSTRAINT lib_author_last_name_nn    NOT NULL,
    country       VARCHAR2(30),
    birth_year    NUMBER(5),
    death_year    NUMBER(5)
);

CREATE UNIQUE INDEX lib_author_pk_ui
    ON lib_author (id);

ALTER TABLE lib_author
ADD CONSTRAINT lib_author_pk
    PRIMARY KEY (id)
    USING INDEX lib_author_pk_ui;

COMMENT ON TABLE  lib_author            IS 'Table of authors';
COMMENT ON COLUMN lib_author.id         IS 'ID of the author';
COMMENT ON COLUMN lib_author.first_name IS 'First name of the author';
COMMENT ON COLUMN lib_author.last_name  IS 'Last name of the author';
COMMENT ON COLUMN lib_author.country    IS 'Nationality of the author';
COMMENT ON COLUMN lib_author.birth_year IS 'Birth year of the author';
COMMENT ON COLUMN lib_author.death_year IS 'Death year of the author';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_book
(
    id           NUMBER(10)       CONSTRAINT lib_book_id_nn           NOT NULL,
    author_id    NUMBER(10)       CONSTRAINT lib_book_author_id_nn    NOT NULL,
    title        VARCHAR2(100)    CONSTRAINT lib_book_title_nn        NOT NULL,
    isbn         VARCHAR2(20)     CONSTRAINT lib_book_isbn_nn         NOT NULL,
    publisher    VARCHAR2(50)     CONSTRAINT lib_book_publisher_nn    NOT NULL,
    year         NUMBER(5)        CONSTRAINT lib_book_year_nn         NOT NULL,
    pages        NUMBER(5)        CONSTRAINT lib_book_pages_nn        NOT NULL,
    language     VARCHAR2(2)      CONSTRAINT lib_book_language_nn     NOT NULL,
    subject      VARCHAR2(20)
);

CREATE UNIQUE INDEX lib_book_pk_ui
    ON lib_book (id);

CREATE INDEX lib_book_author_i
    ON lib_book (author_id);

CREATE INDEX lib_book_title_i
    ON lib_book (title);

ALTER TABLE lib_book
ADD CONSTRAINT lib_book_pk
    PRIMARY KEY (id)
    USING INDEX lib_book_pk_ui;

ALTER TABLE lib_book
ADD CONSTRAINT lib_book_lib_author_id_fk
    FOREIGN KEY (author_id)
    REFERENCES lib_author (id)
    ON DELETE CASCADE;

COMMENT ON TABLE  lib_book           IS 'Table of books';
COMMENT ON COLUMN lib_book.id        IS 'ID of the book';
COMMENT ON COLUMN lib_book.author_id IS 'Author of the book';
COMMENT ON COLUMN lib_book.title     IS 'Title of the book';
COMMENT ON COLUMN lib_book.isbn      IS 'ISBN of the book';
COMMENT ON COLUMN lib_book.publisher IS 'Publisher of the book';
COMMENT ON COLUMN lib_book.year      IS 'Year of publication of the book';
COMMENT ON COLUMN lib_book.pages     IS 'Number of pages';
COMMENT ON COLUMN lib_book.language  IS 'Language of the book';
COMMENT ON COLUMN lib_book.subject   IS 'Subject of the book';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_item
(
    id           NUMBER(10)      CONSTRAINT lib_item_id_nn           NOT NULL,
    book_id      NUMBER(10)      CONSTRAINT lib_item_book_id_nn      NOT NULL,
    available    VARCHAR2(3)     DEFAULT 'YES'    CONSTRAINT lib_item_available_nn    NOT NULL
);

CREATE UNIQUE INDEX lib_item_pk_ui
    ON lib_item (id);

CREATE INDEX lib_item_book_id_i
    ON lib_item (book_id);

ALTER TABLE lib_item
ADD CONSTRAINT lib_item_pk
    PRIMARY KEY (id)
    USING INDEX lib_item_pk_ui;

ALTER TABLE lib_item
ADD CONSTRAINT lib_item_lib_book_id_fk
    FOREIGN KEY (book_id)
    REFERENCES lib_book (id)
    ON DELETE CASCADE;

ALTER TABLE lib_item
ADD CONSTRAINT lib_item_available_ck
    CHECK (available IN ('YES', 'NO'));

COMMENT ON TABLE  lib_item           IS 'Table of items for borrow';
COMMENT ON COLUMN lib_item.id        IS 'ID of the item';
COMMENT ON COLUMN lib_item.book_id   IS 'Book title to which this item refers';
COMMENT ON COLUMN lib_item.available IS 'Availability of the item';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_customer
(
    id            NUMBER(10)      CONSTRAINT lib_customer_id_nn            NOT NULL,
    first_name    VARCHAR2(50)    CONSTRAINT lib_customer_first_name_nn    NOT NULL,
    last_name     VARCHAR2(50)    CONSTRAINT lib_customer_last_name_nn     NOT NULL,
    address       VARCHAR2(50)    CONSTRAINT lib_customer_address_nn       NOT NULL,
    birth_date    DATE            CONSTRAINT lib_customer_birth_date_nn    NOT NULL,
    email         VARCHAR2(50)    CONSTRAINT lib_customer_email_nn         NOT NULL,
    phone         VARCHAR2(50)    CONSTRAINT lib_customer_phone_nn         NOT NULL,
    balance       NUMBER(5)       DEFAULT 0    CONSTRAINT lib_customer_balance_nn   NOT NULL
);

CREATE UNIQUE INDEX lib_customer_pk_ui
    ON lib_customer (id);

ALTER TABLE lib_customer
ADD CONSTRAINT lib_customer_pk
    PRIMARY KEY (id)
    USING INDEX lib_customer_pk_ui;

COMMENT ON TABLE  lib_customer            IS 'Table of customers';
COMMENT ON COLUMN lib_customer.id         IS 'ID of the customer';
COMMENT ON COLUMN lib_customer.first_name IS 'First name of the customer';
COMMENT ON COLUMN lib_customer.last_name  IS 'Last name of the customer';
COMMENT ON COLUMN lib_customer.address    IS 'Address of the customer';
COMMENT ON COLUMN lib_customer.birth_date IS 'Date of birth of the customer';
COMMENT ON COLUMN lib_customer.email      IS 'Email of the customer';
COMMENT ON COLUMN lib_customer.phone      IS 'Phone of the customer';
COMMENT ON COLUMN lib_customer.balance    IS 'Balance of the customer';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_card
(
    id                   NUMBER(10)      CONSTRAINT lib_card_id_nn             NOT NULL,
    customer_id          NUMBER(10)      CONSTRAINT lib_card_customer_id_nn    NOT NULL,
    status               NUMBER(1)       DEFAULT 0    CONSTRAINT lib_card_status_id_nn    NOT NULL,
    activation_date      DATE,
    deactivation_date    DATE
);

CREATE UNIQUE INDEX lib_card_pk_ui
    ON lib_card (id);

CREATE INDEX lib_card_customer_id_i
    ON lib_card (customer_id);

ALTER TABLE lib_card
ADD CONSTRAINT lib_card_pk
    PRIMARY KEY (id)
    USING INDEX lib_card_pk_ui;

ALTER TABLE lib_card
ADD CONSTRAINT lib_card_lib_customer_id_fk
    FOREIGN KEY (customer_id)
    REFERENCES lib_customer (id)
    ON DELETE CASCADE;

ALTER TABLE lib_card
ADD CONSTRAINT lib_card_status_ck
    CHECK (status IN (0, 1, 2));

COMMENT ON TABLE  lib_card                   IS 'Table of cards';
COMMENT ON COLUMN lib_card.id                IS 'ID of the card';
COMMENT ON COLUMN lib_card.customer_id       IS 'Customer who owns the card';
COMMENT ON COLUMN lib_card.status            IS 'Status of the card (0 inactive, 1 active, 2 disabled)';
COMMENT ON COLUMN lib_card.activation_date   IS 'Date of activation of the card';
COMMENT ON COLUMN lib_card.deactivation_date IS 'Date of deactivation of the card';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_payment
(
    id              NUMBER(10)      CONSTRAINT lib_payment_id_nn              NOT NULL,
    customer_id     NUMBER(10)      CONSTRAINT lib_payment_customer_id_nn     NOT NULL,
    amount          NUMBER(5)       CONSTRAINT lib_payment_amount_nn          NOT NULL,
    balance_old     NUMBER(5)       CONSTRAINT lib_payment_balance_old_nn     NOT NULL,
    balance_new     NUMBER(5)       CONSTRAINT lib_payment_balance_new_nn     NOT NULL,
    payment_date    TIMESTAMP       CONSTRAINT lib_payment_payment_date_nn    NOT NULL,
    type            VARCHAR2(30)    CONSTRAINT lib_payment_type_nn            NOT NULL
);

CREATE UNIQUE INDEX lib_payment_pk_ui
    ON lib_payment (id);

CREATE INDEX lib_payment_customer_id_i
    ON lib_payment (customer_id);

ALTER TABLE lib_payment
ADD CONSTRAINT lib_payment_pk
    PRIMARY KEY (id)
    USING INDEX lib_payment_pk_ui;

ALTER TABLE lib_payment
ADD CONSTRAINT lib_payment_lib_customer_id_fk
    FOREIGN KEY (customer_id)
    REFERENCES lib_customer (id)
    ON DELETE CASCADE;

ALTER TABLE lib_payment
ADD CONSTRAINT lib_payment_type_ck
    CHECK (type IN ('DEPOSIT', 'WITHDRAW', 'CARD', 'DAMAGE', 'LATE'));

COMMENT ON TABLE  lib_payment              IS 'Table of payments';
COMMENT ON COLUMN lib_payment.id           IS 'ID of the payment';
COMMENT ON COLUMN lib_payment.customer_id  IS 'Customer who made the payment';
COMMENT ON COLUMN lib_payment.amount       IS 'Payed amount';
COMMENT ON COLUMN lib_payment.balance_old  IS 'Balance before the payment';
COMMENT ON COLUMN lib_payment.balance_new  IS 'Balance after the payment';
COMMENT ON COLUMN lib_payment.payment_date IS 'Date of the payment';
COMMENT ON COLUMN lib_payment.type         IS 'Type of the payment';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_borrow
(
    id             NUMBER(10)    CONSTRAINT lib_borrow_id_nn            NOT NULL,
    item_id        NUMBER(10)    CONSTRAINT lib_borrow_item_id_nn       NOT NULL,
    card_id        NUMBER(10)    CONSTRAINT lib_borrow_card_id_nn       NOT NULL,
    start_date     DATE          CONSTRAINT lib_borrow_start_date_nn    NOT NULL,
    max_date       DATE,
    return_date    DATE
);

CREATE UNIQUE INDEX lib_borrow_pk_ui
    ON lib_borrow (id);

CREATE INDEX lib_borrow_item_id_i
    ON lib_borrow (item_id);

CREATE INDEX lib_borrow_card_id_i
    ON lib_borrow (card_id);

ALTER TABLE lib_borrow
ADD CONSTRAINT lib_borrow_pk
    PRIMARY KEY (id)
    USING INDEX lib_borrow_pk_ui;

ALTER TABLE lib_borrow
ADD CONSTRAINT lib_borrow_lib_item_id_fk
    FOREIGN KEY (item_id)
    REFERENCES lib_item (id)
    ON DELETE CASCADE;

ALTER TABLE lib_borrow
ADD CONSTRAINT lib_borrow_lib_card_id_fk
    FOREIGN KEY (card_id)
    REFERENCES lib_card (id)
    ON DELETE CASCADE;

COMMENT ON TABLE  lib_borrow             IS 'Table of borrowed books';
COMMENT ON COLUMN lib_borrow.id          IS 'ID of the borrow';
COMMENT ON COLUMN lib_borrow.item_id     IS 'The item which was borrowed';
COMMENT ON COLUMN lib_borrow.card_id     IS 'The card related to the borrow';
COMMENT ON COLUMN lib_borrow.start_date  IS 'Date of the borrow';
COMMENT ON COLUMN lib_borrow.max_date    IS 'Max date of return';
COMMENT ON COLUMN lib_borrow.return_date IS 'Date of return';

------------------------------------------------------------------------------------------------

CREATE TABLE lib_borrow_history
(
    id             NUMBER(10)    CONSTRAINT lib_borrow_h_id_nn            NOT NULL,
    item_id        NUMBER(10)    CONSTRAINT lib_borrow_h_item_id_nn       NOT NULL,
    card_id        NUMBER(10)    CONSTRAINT lib_borrow_h_card_id_nn       NOT NULL,
    start_date     DATE          CONSTRAINT lib_borrow_h_start_date_nn    NOT NULL,
    max_date       DATE,
    return_date    DATE
);

CREATE UNIQUE INDEX lib_borrow_h_pk_ui
    ON lib_borrow_history (id);

CREATE INDEX lib_borrow_h_item_id_i
    ON lib_borrow_history (item_id);

CREATE INDEX lib_borrow_h_card_id_i
    ON lib_borrow_history (card_id);

ALTER TABLE lib_borrow_history
ADD CONSTRAINT lib_borrow_h_pk
    PRIMARY KEY (id)
    USING INDEX lib_borrow_h_pk_ui;

ALTER TABLE lib_borrow_history
ADD CONSTRAINT lib_borrow_h_lib_item_id_fk
    FOREIGN KEY (item_id)
    REFERENCES lib_item (id)
    ON DELETE CASCADE;

ALTER TABLE lib_borrow_history
ADD CONSTRAINT lib_borrow_h_lib_card_id_fk
    FOREIGN KEY (card_id)
    REFERENCES lib_card (id)
    ON DELETE CASCADE;

COMMENT ON TABLE  lib_borrow_history             IS 'Table of borrowed books';
COMMENT ON COLUMN lib_borrow_history.id          IS 'ID of the borrow';
COMMENT ON COLUMN lib_borrow_history.item_id     IS 'The item which was borrowed';
COMMENT ON COLUMN lib_borrow_history.card_id     IS 'The card related to the borrow';
COMMENT ON COLUMN lib_borrow_history.start_date  IS 'Date of the borrow';
COMMENT ON COLUMN lib_borrow_history.max_date    IS 'Max date of return';
COMMENT ON COLUMN lib_borrow_history.return_date IS 'Date of return';
